version: '3.8'
services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: 'development'
    command: npm run gateway
    environment:
      - KAFKA_BROKER=kafka:9092
    ports:
      - '8080:3000'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka
  command-app:
    build:
      context: .
      dockerfile: apps/command-app/Dockerfile
      target: 'development'
    command: npm run commands-app
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://root:password123@mongodb:27017/
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka
      - mongodb
  query-app:
    build:
      context: .
      dockerfile: apps/query-app/Dockerfile
      target: 'development'
    command: npm run query-app
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_URI=mongodb://root:password123@mongodb:27017/
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - kafka
      - mongodb
  mongodb:
    image: 'mongo:7.0.4'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - 'mongodb_master_data:/data/db'
  zookeeper:
    image: bitnami/zookeeper:3.9.1-debian-11-r3
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:3.6.1-debian-11-r0
    restart: 'no'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper
volumes:
  mongodb_master_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
